var modelFormat = require("./model-format");function ModelWhere(){    this._column = "";    this._value = "";    this._operator = "=";    this.condition = "AND";    this.add.apply(this,arguments);}module.exports = ModelWhere;ModelWhere.new = function(){  var modelWhere = new ModelWhere();  modelWhere.add.apply(modelWhere,arguments);  return modelWhere;};ModelWhere.prototype = {    new: function () {        var modelWhere = new ModelWhere();        modelWhere.add.apply(modelWhere,arguments);        return modelWhere;    },    add: function () {        var self = this;        if(arguments.length == 0) return;        self._column = arguments[0];        self._value = arguments[1];        if(arguments.length == 3){            if(arguments[2].trim().toLowerCase() == "or"            || arguments[2].trim().toLowerCase() == "and"                ){                self.condition = arguments[2].trim().toUpperCase();            }else{                self._operator = arguments[2].trim().toUpperCase();            }        }else if(arguments.length == 4){            self._operator = arguments[2].trim().toUpperCase();            self.condition = arguments[3].trim().toUpperCase();        }        return self;    },    toString: function () {        var self = this;        switch(self._operator){          case "%":          case "%_":          case "_%":          var o = self._operator;          (o == "%") && (o = "%_%");          self._operator = "LIKE";          self._value = o.replace("_",self._value);          break;        }        var result = "(`"+self._column+"` "+self._operator+" ";        if(self._operator == "IN" || self._operator == "NOT IN"){            if(typeof self._value == "string"){                result+=" ("+self._value+") ";            }else{                result+=" ("+self._value.join(",")+") ";            }        }else if(self._operator == "BETWEEN" || self._operator == "NOT BETWEEN"){            var between = self._value;            if(typeof self._value != "string"){                between = self._value.join(",");            }            result+=" "+between.replace(","," AND ")+" ";        }else{            result+=modelFormat.format(self._value);        }        return result+")";    }};