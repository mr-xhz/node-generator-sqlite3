var ModelWhere = require("./model-where");    $ = require("../util/util");function ModelWhereList(){    this.length = 0;    this.condition = "AND";    this._value = [];}module.exports = ModelWhereList;ModelWhereList.new = function(){  return ModelWhereList();};ModelWhereList.newWhere = function(){  return ModelWhere.new.apply(null,arguments);};ModelWhereList.prototype = {    new:function(){      return ModelWhereList();    },    newWhere:function(){        return ModelWhere.new.apply(null,arguments);    },    or:function(){      var self = this;      var args = Array.prototype.slice.call(arguments);      args.push("or");      self.where.apply(self,args);    },    where: function () {        var self = this;        if(arguments.length == 1){            self._value.push(arguments[0]);        }else if(arguments.length == 2 && typeof arguments[0] == "object"){            arguments[0].condition = arguments[1].toUpperCase();            self._value.push(arguments[0]);        }else{            if($.type(arguments[1]) == "undefined"){                return self;            }            self._value.push(self.newWhere.apply(self,arguments));        }        return self;    },    clean: function () {        var self = this;        self._value = [];        return self;    },    toString: function () {        var self = this;        if(self._value.length == 0){            return "";        }        var result = " (";        for (var i = 0; i < self._value.length; i++) {            var obj = self._value[i];            if(i != 0){                result+=" "+obj.condition+" ";            }            result+=obj.toString();        }        return result+") ";    }};